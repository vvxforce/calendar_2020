{"version":3,"sources":["ModalWindow.js","DayOfMonth.js","App.js","index.js"],"names":["ModalWindow","open","setModalValue","addNewEvent","useState","textInput","setTextInput","fromDate","setFromDate","fromTime","setFromTime","toDate","setToDate","toTime","setToTime","Modal","trigger","Button","onClick","onClose","Header","Content","image","Image","wrapped","size","src","onSubmit","event","preventDefault","dayFrom","split","timeFrom","dayTo","timeTo","ev","id","Date","getTime","title","startAt","endAt","handleForm","Input","value","type","onChange","e","target","class","className","DayOfMonth","month","events","currentYearAndMonth","handleDayClick","map","day","i","dayNow","toLocaleDateString","year","cn","today","filter","item","tomorrow","months","0","1","2","3","4","5","6","7","8","9","10","11","App","setCurrentYearAndMonth","modalValue","JSON","parse","localStorage","getItem","setEvents","changeCurrentMonth","n","current","getFullYear","getMonth","useEffect","setItem","stringify","newEvent","daysInMonth","getDate","firstDayOfMonth","getDay","curMonth","Array","from","it","unshift","getMonthTable","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15847288.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Modal, Image, Input } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst ModalWindow = ({ open, setModalValue, addNewEvent }) => {\n  const [textInput, setTextInput] = useState('');\n  const [fromDate, setFromDate] = useState('');\n  const [fromTime, setFromTime] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [toTime, setToTime] = useState('');\n  const handleForm = (event) => {\n    event.preventDefault();\n    setModalValue(false);\n    const dayFrom = fromDate.split('-');\n    const timeFrom = fromTime.split(':');\n    const dayTo = toDate.split('-');\n    const timeTo = toTime.split(':');\n    const ev = {\n      id: new Date().getTime(),\n      title: textInput,\n      startAt: new Date(\n        +dayFrom[0],\n        +dayFrom[1],\n        +dayFrom[2],\n        +timeFrom[0],\n        +timeFrom[1],\n      ).getTime(),\n      endAt: new Date(\n        +dayTo[0],\n        +dayTo[1],\n        +dayTo[2],\n        +timeTo[0],\n        +timeTo[1],\n      ).getTime(),\n    };\n\n    addNewEvent(ev);\n    setTextInput('');\n  };\n\n  return (\n    <Modal\n      trigger={<Button onClick={() => setModalValue(true)}>Add event</Button>}\n      onClose={() => setModalValue(false)}\n      open={open}\n    >\n      <Modal.Header>Add event</Modal.Header>\n      <Modal.Content image>\n        <Image\n          wrapped\n          size=\"medium\"\n          // eslint-disable-next-line max-len\n          src=\"https://cdn1.iconfinder.com/data/icons/christmas-icostory-black-and-white/64/calendar-time-scheduler-schedule-512.png\"\n        />\n        <form onSubmit={event => handleForm(event)}>\n          <label>\n            Event title:\n            {' '}\n            <Input\n              value={textInput}\n              type=\"text\"\n              onChange={e => setTextInput(e.target.value)}\n              class=\"ui input\"\n            />\n          </label>\n          <br />\n          <label>\n            From:\n            {' '}\n            <Input\n              className=\"input\"\n              type=\"date\"\n              onChange={e => setFromDate(e.target.value)}\n            />\n          </label>\n          {' '}\n          <Input\n            className=\"input\"\n            type=\"time\"\n            onChange={e => setFromTime(e.target.value)}\n          />\n          <br />\n          <label>\n            To:\n            {' '}\n            <Input\n              className=\"input\"\n              type=\"date\"\n              onChange={e => setToDate(e.target.value)}\n            />\n          </label>\n          {' '}\n          <Input\n            className=\"input\"\n            type=\"time\"\n            onChange={e => setToTime(e.target.value)}\n          />\n          <br />\n          <button type=\"submit\" className=\"ui button form\">\n            Add event\n          </button>\n        </form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nModalWindow.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setModalValue: PropTypes.bool.isRequired,\n  addNewEvent: PropTypes.func.isRequired,\n};\n\nexport default ModalWindow;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst DayOfMonth = ({ month, setModalValue, events, currentYearAndMonth }) => {\n  const handleDayClick = () => {\n    setModalValue(true);\n  };\n\n  return month.map((day, i) => {\n    const dayNow\n      = new Date().toLocaleDateString()\n      === new Date(\n        currentYearAndMonth.year,\n        currentYearAndMonth.month,\n        day,\n      ).toLocaleDateString();\n\n    return (\n      // eslint-disable-next-line max-len\n      // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n      <div\n        onClick={handleDayClick}\n        className={cn({\n          'day-cell': true,\n          today: dayNow,\n        })}\n      >\n        <div className=\"day-cell__number\">{day}</div>\n        <div>\n          <ul>\n            {events\n              .filter((item) => {\n                const today = new Date(\n                  currentYearAndMonth.year,\n                  currentYearAndMonth.month + 1,\n                  day,\n                ).getTime();\n                const tomorrow = new Date(\n                  currentYearAndMonth.year,\n                  currentYearAndMonth.month + 1,\n                  day + 1,\n                ).getTime();\n\n                return (\n                  (item.startAt >= today && item.startAt < tomorrow)\n                  || (item.endAt >= today && item.endAt < tomorrow)\n                );\n              })\n              .map(item => (\n                <li>{item.title}</li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    );\n  });\n};\n\nDayOfMonth.propTypes = {\n  month: PropTypes.number.isRequired,\n  setModalValue: PropTypes.bool.isRequired,\n  events: PropTypes.string.isRequired,\n  currentYearAndMonth: PropTypes.number.isRequired,\n};\n\nexport default DayOfMonth;\n","import React, { useState, useEffect } from 'react';\nimport ModalWindow from './ModalWindow';\nimport DayOfMonth from './DayOfMonth';\nimport './App.css';\n\nconst months = {\n  0: 'January',\n  1: 'February',\n  2: 'March',\n  3: 'April',\n  4: 'May',\n  5: 'June',\n  6: 'July',\n  7: 'August',\n  8: 'September',\n  9: 'October',\n  10: 'November',\n  11: 'December',\n};\n\nconst App = () => {\n  const [currentYearAndMonth, setCurrentYearAndMonth] = useState({\n    year: 2020,\n    month: 0,\n  });\n  const [modalValue, setModalValue] = useState(false);\n  const [events, setEvents] = useState(\n    JSON.parse(localStorage.getItem('events')) || [],\n  );\n  const addNewEvent = (newEvent) => {\n    setEvents([...events, newEvent]);\n  };\n\n  const getMonthTable = () => {\n    const daysInMonth = new Date(\n      currentYearAndMonth.year,\n      currentYearAndMonth.month + 1,\n      0,\n    ).getDate();\n    const firstDayOfMonth = new Date(\n      currentYearAndMonth.year,\n      currentYearAndMonth.month,\n    ).getDay();\n    const curMonth = Array.from(Array(daysInMonth), (it, i) => i + 1);\n\n    curMonth.unshift(...Array.from(Array(firstDayOfMonth)));\n\n    return curMonth;\n  };\n\n  const changeCurrentMonth = (n) => {\n    const current = new Date(\n      currentYearAndMonth.year,\n      currentYearAndMonth.month + n,\n    );\n\n    setCurrentYearAndMonth({\n      year: current.getFullYear(),\n      month: current.getMonth(),\n    });\n  };\n\n  const returnToCurrentDay = () => {\n    const current = new Date();\n\n    setCurrentYearAndMonth({\n      year: current.getFullYear(),\n      month: current.getMonth(),\n    });\n  };\n\n  useEffect(() => {\n    const month = new Date().getMonth();\n    const year = new Date().getFullYear();\n\n    setCurrentYearAndMonth({\n      year,\n      month,\n    });\n  }, []);\n  useEffect(() => localStorage.setItem('events', JSON.stringify(events)));\n\n  return (\n    <div className=\"container\">\n      <section className=\"current-day\">\n        <h1>\n          {months[currentYearAndMonth.month]}\n,\n          {currentYearAndMonth.year}\n        </h1>\n        <button\n          className=\"ui button\"\n          type=\"button\"\n          onClick={() => changeCurrentMonth(-1)}\n        >\n          Prev\n        </button>\n        <button\n          className=\"ui button\"\n          type=\"button\"\n          onClick={() => changeCurrentMonth(1)}\n        >\n          Next\n        </button>\n      </section>\n      <section className=\"options\">\n        <button\n          className=\"ui button\"\n          type=\"button\"\n          onClick={returnToCurrentDay}\n        >\n          Today\n        </button>\n        <ModalWindow\n          open={modalValue}\n          setModalValue={setModalValue}\n          addNewEvent={addNewEvent}\n        />\n      </section>\n      <table>\n        <tr className=\"box\">\n          <th className=\"box__title\">Su</th>\n          <th className=\"box__title\">Mo</th>\n          <th className=\"box__title\">Tu</th>\n          <th className=\"box__title\">We</th>\n          <th className=\"box__title\">Th</th>\n          <th className=\"box__title\">Fr</th>\n          <th className=\"box__title\">Sa</th>\n          <DayOfMonth\n            month={getMonthTable()}\n            setModalValue={setModalValue}\n            events={events}\n            currentYearAndMonth={currentYearAndMonth}\n          />\n        </tr>\n      </table>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}